C51 COMPILER V9.60.7.0   MAIN                                                              11/09/2024 12:28:24 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Listings\main.lst) TA
                    -BS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          int released_P2_4_1 = 0;
   3          int released_P2_6_1 = 0;
   4          int released_P2_6_3 = 0;
   5          int released_P2_7_3 = 0;
   6          // 1 - nie wcisniety
   7          int not_pressed_P2_7_1 = 1;
   8          int not_pressed_P2_4_2 = 1;
   9          int not_pressed_P2_5_2 = 1;
  10          int not_pressed_P2_6_2 = 1;
  11          int not_pressed_P2_7_2 = 1;
  12          int not_pressed_P2_5_3 = 1;
  13          int not_pressed_P2_4_3 = 1;
  14          unsigned char data press_counter_P2_7_1 = 0;
  15          unsigned char data press_counter_P2_7_2 = 0;
  16          unsigned char data release_counter_P2_4_1 = 0;
  17          unsigned char data release_counter_P2_7_3 = 0;
  18          unsigned char data double_release_counter = 0;
  19          unsigned char data double_press_counter = 0;
  20          
  21          void sleep()
  22          {
  23   1        int i, j;
  24   1        for(i = 0; i < 70; i++)
  25   1        {
  26   2          for(j = 0; j < 70; j++){;}
  27   2        }
  28   1      }
  29          
  30          void block_5sec(){
  31   1        int x, y;
  32   1        for(x = 0; x < 300; x++){
  33   2          for(y = 0; y < 300; y++){
  34   3          }
  35   2        }
  36   1      }
  37          
  38          void main()
  39          {
  40   1        int hold_time = 0;
  41   1        int blocked = 0;
  42   1        int blocked_seq = 0;
  43   1        int activation_counter = 0;
  44   1        int correct_sequence1 = 0;
  45   1        int correct_sequence2 = 0;
  46   1        int func_turned_off = 0;
  47   1        
  48   1        // kolumny na 0
  49   1        P2_1 = 0;
  50   1        P2_2 = 0;
  51   1        P2_3 = 0; 
  52   1        
  53   1        while(1)
  54   1          {
C51 COMPILER V9.60.7.0   MAIN                                                              11/09/2024 12:28:24 PAGE 2   

  55   2            if(blocked == 0 && blocked_seq == 0)
  56   2            {
  57   3              P2_1 = 1; // na poczatek 1. kolumna
  58   3              P2_2 = 1;
  59   3              P2_3 = 0;
  60   3      
  61   3              
  62   3              // co trzecie puszczenie blokuje klawiature. Odblokowanie wylacznie kolejno sekwencja       
  63   3              if(!P2_4)
  64   3              {
  65   4                while(1)
  66   4                {
  67   5                  sleep();
  68   5                  if(P2_4)
  69   5                  {
  70   6                    //release_counter_P2_4_1++;
  71   6                    release_counter_P2_4_1 = (release_counter_P2_4_1 + 1) % 3;
  72   6                    break;
  73   6                  }
  74   5                }
  75   4                //if(release_counter_P2_4_1 != 0 && release_counter_P2_4_1 % 3 == 0)
  76   4                  if(release_counter_P2_4_1 == 0)
  77   4                  {
  78   5                    blocked_seq = 1;
  79   5                  }
  80   4              }
  81   3              
  82   3              // podwójne puszczenie zapala diode
  83   3              if(P2_5 == 1){
  84   4                sleep();
  85   4                double_release_counter++;
  86   4                if(P2_5 == 0){
  87   5                  sleep();
  88   5                  if(P2_5 == 1){
  89   6                    sleep();
  90   6                    double_release_counter++;
  91   6                  }
  92   5                }
  93   4              }
  94   3              if(double_release_counter == 2){
  95   4                sleep();
  96   4                P0_0 = 0;
  97   4              }
  98   3              double_release_counter = 0;
  99   3      
 100   3              
 101   3              //puszczenie zapalenie, zgaszenie diody
 102   3              if(!P2_6)
 103   3              {
 104   4                sleep();
 105   4                sleep();
 106   4                while(1)
 107   4                {
 108   5                  if(P2_6)
 109   5                  {
 110   6                    break;
 111   6                  }
 112   5                }
 113   4                if(func_turned_off == 0)
 114   4                    {
 115   5                      sleep();
 116   5                      P0_0 = 0;
C51 COMPILER V9.60.7.0   MAIN                                                              11/09/2024 12:28:24 PAGE 3   

 117   5                      sleep();
 118   5                      P0_0 = 1;
 119   5                    }
 120   4              }
 121   3              
 122   3              /*if(released_P2_6_1 && P2_6)
 123   3              {
 124   3                if(func_turned_off == 0)
 125   3                {
 126   3                  sleep();
 127   3                  P0_0 = 0;
 128   3                  sleep();
 129   3                  P0_0 = 1;
 130   3                  released_P2_6_1 = 0;
 131   3                }
 132   3              }*/
 133   3              
 134   3              // co drugie wcisniecie, w zaleznosci od aktywacji robi to co w dokumencie, co drugie klikniecie to do
             -piero jedna aktywacja
 135   3              if(!P2_7)
 136   3              {
 137   4                press_counter_P2_7_1++;
 138   4                
 139   4        
 140   4                if(press_counter_P2_7_1 != 0 && press_counter_P2_7_1 % 2 == 0)
 141   4                {
 142   5                  activation_counter++;
 143   5                  
 144   5                  if(activation_counter % 3 == 0)
 145   5                  {
 146   6                    sleep();
 147   6                    P0_0 = 0;
 148   6                  }else if(activation_counter % 3 == 1)
 149   5                  {
 150   6                    sleep();
 151   6                    P0_0 = 1;
 152   6                  }else if(activation_counter % 3 == 2)
 153   5                  {
 154   6                    sleep();
 155   6                    P0_0 = 0;
 156   6                    sleep();
 157   6                    P0_0 = 1;
 158   6                  }
 159   5      
 160   5                }
 161   4              }
 162   3      
 163   3              
 164   3      
 165   3              
 166   3              P2_1 = 1; // 2. kolumna
 167   3              P2_2 = 0;
 168   3              P2_3 = 1;
 169   3              
 170   3              // wcisniecie blokuje klawiature na ok. 5s
 171   3              if(not_pressed_P2_4_2 && !P2_4)
 172   3              {
 173   4                block_5sec();
 174   4              }
 175   3              not_pressed_P2_4_2 = P2_4;
 176   3              
 177   3              //przytrzymanie na ok. 3s gasi diode
C51 COMPILER V9.60.7.0   MAIN                                                              11/09/2024 12:28:24 PAGE 4   

 178   3              if(P2_5 == 0)
 179   3              {
 180   4                sleep();
 181   4                while(P2_5 == 0)
 182   4                {
 183   5                  sleep();
 184   5                  hold_time++;
 185   5                  if(hold_time > 3)
 186   5                  { 
 187   6                    sleep();
 188   6                    P0_0 = 1;
 189   6                    break;
 190   6                  }
 191   5                }
 192   4              }
 193   3              not_pressed_P2_5_2 = P2_5;
 194   3              
 195   3              // wcisniecie zapala, gasi diode
 196   3              if(not_pressed_P2_6_2 && !P2_6)
 197   3              {
 198   4                if(func_turned_off == 0)
 199   4                {
 200   5                  sleep();
 201   5                  P0_0 = 0;
 202   5                  sleep();
 203   5                  P0_0 = 1;
 204   5                }           
 205   4              }
 206   3              not_pressed_P2_6_2 = P2_6;
 207   3              
 208   3              // co trzecie wcisniecie odblokowuje klawiature
 209   3      
 210   3              
 211   3      
 212   3              
 213   3              P2_1 = 0; // 3. koluumna
 214   3              P2_2 = 1;
 215   3              P2_3 = 1;
 216   3              
 217   3              //podwojne wcisniecie wylacza dzialanie funkcji przycisku o funkcji 3
 218   3                if(!P2_4)
 219   3                {
 220   4                  sleep();
 221   4                  double_press_counter++;
 222   4                  if(P2_4)
 223   4                  {
 224   5                    if(!P2_4)
 225   5                    {
 226   6                      sleep();
 227   6                      double_press_counter++;
 228   6                    }
 229   5                  }
 230   4                  if(double_press_counter == 2)
 231   4                  {
 232   5                    func_turned_off = 1;
 233   5                    double_press_counter = 0;
 234   5                  }
 235   4                  
 236   4                }
 237   3      
 238   3      
 239   3              
C51 COMPILER V9.60.7.0   MAIN                                                              11/09/2024 12:28:24 PAGE 5   

 240   3              // wcisniecie zmienia stan diody
 241   3              if(not_pressed_P2_5_3 && !P2_5)
 242   3              { 
 243   4                if(P0_0 == 1)
 244   4                {
 245   5                  sleep();
 246   5                  P0_0 = 0;
 247   5                }else
 248   4                {
 249   5                  sleep();
 250   5                  P0_0 = 1;
 251   5                }
 252   4              }
 253   3              not_pressed_P2_5_3 = P2_5;
 254   3              
 255   3              // puszczenie zapalenie, zgaszenie, zapaleniem, zgaszenie diody
 256   3              if(!P2_6)
 257   3              {
 258   4                while(1)
 259   4                {
 260   5                  if(P2_6)
 261   5                  {
 262   6                    break;
 263   6                  }
 264   5      
 265   5                }
 266   4                  sleep();
 267   4                  P0_0 = 0;
 268   4                  sleep();
 269   4                  P0_0 = 1;
 270   4                  sleep();
 271   4                  P0_0 = 0;
 272   4                  sleep();
 273   4                  P0_0 = 1;
 274   4              }
 275   3              
 276   3      
 277   3            
 278   3              // co drugie puszczenie blokuje klawiature
 279   3              //if(!P2_7)
 280   3              //{
 281   3                //released_P2_7_3 = 1;
 282   3              //}
 283   3              
 284   3              if(!P2_7)
 285   3              {
 286   4                sleep();
 287   4                while(1)
 288   4                { 
 289   5                  if(P2_7)
 290   5                  {
 291   6                    //release_counter_P2_7_3++;
 292   6                    release_counter_P2_7_3 = (release_counter_P2_7_3 + 1) % 2;
 293   6                    break;
 294   6                  }
 295   5                }
 296   4                  //if(release_counter_P2_7_3 != 0 && release_counter_P2_7_3 % 2 == 0)
 297   4                  if(release_counter_P2_7_3 == 0)
 298   4                  {
 299   5                    blocked = 1;
 300   5                  }         
 301   4            }
C51 COMPILER V9.60.7.0   MAIN                                                              11/09/2024 12:28:24 PAGE 6   

 302   3            }else if(blocked == 1)
 303   2            {
 304   3              //kolumna 1
 305   3              P2_1 = 1;
 306   3              P2_2 = 1;
 307   3              P2_3 = 0;
 308   3              
 309   3              
 310   3              //kolumna 2
 311   3              P2_1 = 1;
 312   3              P2_2 = 0;
 313   3              P2_3 = 1;
 314   3              
 315   3              // co trzecie wcisniecie odblokowuje klawiature
 316   3              if(not_pressed_P2_7_2 && !P2_7)
 317   3              {
 318   4                press_counter_P2_7_2++;
 319   4                if(press_counter_P2_7_2 != 0 && press_counter_P2_7_2 % 3 == 0)
 320   4                {
 321   5                  blocked = 0;
 322   5                }
 323   4              }
 324   3              not_pressed_P2_7_2 = P2_7;
 325   3              
 326   3              //kolumna 3
 327   3              P2_1 = 0;
 328   3              P2_2 = 1;
 329   3              P2_3 = 1;
 330   3              
 331   3            }else if(blocked_seq == 1) // odblokowanie 8 9 *
 332   2            {
 333   3              //kolumna 1
 334   3              P2_1 = 1;
 335   3              P2_2 = 1;
 336   3              P2_3 = 0;
 337   3              
 338   3              if(!P2_4){
 339   4                sleep();
 340   4                correct_sequence1 = 0;
 341   4                correct_sequence2 = 0;
 342   4            }
 343   3            
 344   3            if(!P2_5){
 345   4              sleep();
 346   4              correct_sequence1 = 0;
 347   4              correct_sequence2 = 0;
 348   4            }
 349   3            
 350   3            if(!P2_6){
 351   4              sleep();
 352   4              correct_sequence1 = 0;
 353   4              correct_sequence2 = 0;
 354   4            }
 355   3            
 356   3            //trzeci Z RZEDU poprawny, bo * w 1 kolumnie jest
 357   3            if(!P2_7){
 358   4              sleep();
 359   4              if(correct_sequence1 == 1){
 360   5                if(correct_sequence2 == 1){
 361   6                  blocked_seq = 0;
 362   6                  correct_sequence1 = 0;
 363   6                  correct_sequence2 = 0;
C51 COMPILER V9.60.7.0   MAIN                                                              11/09/2024 12:28:24 PAGE 7   

 364   6                }else{
 365   6                  correct_sequence1 = 0;
 366   6                  correct_sequence2 = 0;
 367   6                }
 368   5              }
 369   4            }     
 370   3              
 371   3              //kolumna 2
 372   3              P2_1 = 1;
 373   3              P2_2 = 0;
 374   3              P2_3 = 1;
 375   3              
 376   3              if(!P2_4){
 377   4                sleep();
 378   4                correct_sequence1 = 0;
 379   4                correct_sequence2 = 0;
 380   4              }
 381   3              if(!P2_5){
 382   4                sleep();
 383   4                correct_sequence1 = 0;
 384   4                correct_sequence2 = 0;
 385   4              }
 386   3              
 387   3              
 388   3              //pierwszy poprawny, bo 8 w 2. kolumnie
 389   3              if(!P2_6){
 390   4                sleep();
 391   4                correct_sequence1 = 1;
 392   4              }
 393   3              
 394   3              
 395   3              if(!P2_7){
 396   4                sleep();
 397   4                correct_sequence1 = 0;
 398   4                correct_sequence2 = 0;
 399   4              }
 400   3      
 401   3              
 402   3              //kolumna 3
 403   3              P2_1 = 0;
 404   3              P2_2 = 1;
 405   3              P2_3 = 1;
 406   3              
 407   3              if(!P2_4){
 408   4                sleep();
 409   4                correct_sequence1 = 0;
 410   4                correct_sequence2 = 0;
 411   4              }
 412   3            
 413   3              if(!P2_5){
 414   4                sleep();
 415   4                correct_sequence1 = 0;
 416   4                correct_sequence2 = 0;
 417   4              }
 418   3                  
 419   3              
 420   3              //drugi poprawny, bo 9 w 3. kolumnie
 421   3              if(!P2_6){
 422   4                sleep();
 423   4                if(correct_sequence1 == 1){ // czy 8 wcisniete juz sprawdzamy
 424   5                  correct_sequence2 = 1;
 425   5                }else{
C51 COMPILER V9.60.7.0   MAIN                                                              11/09/2024 12:28:24 PAGE 8   

 426   5                  correct_sequence1 = 0;
 427   5                }
 428   4              }
 429   3      
 430   3              if(!P2_7){
 431   4                sleep();
 432   4                correct_sequence1 = 0;
 433   4                correct_sequence2 = 0;
 434   4              }
 435   3            }
 436   2          }
 437   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    803    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     28      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
